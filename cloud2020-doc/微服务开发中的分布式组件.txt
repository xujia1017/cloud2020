1 服务注册中心
    Eureka
    consul
    Nacos
    Zookeeper
    Redis


2 负载均衡
      RestTemplate: Spring提供的一个访问 Http 服务的客户端类
      Ribbon: 是运行在消费者端的负载均衡器


3 RPC通信组件
      Feign
      OpenFeign: 也是运行在消费者端的，使用 Ribbon 进行负载均衡，所以 OpenFeign 直接内置了 Ribbon
      Dubbo
      Grpc



4 服务降级/熔断
    降级: 降级是为了更好的用户体验，当一个方法调用异常时，通过执行另一种代码逻辑来给用户友好的恢复。比如Hystrix的后背处理模式，通过设置fallbackMethod来给一个方法设置备用的代码逻辑。
    熔断: 熔断是服务雪崩的一种有效解决方案。当指定时间窗内的请求失败率达到设定阈值时，系统将通过 断路器 直接将此请求链路断开。比如通过 @HystrixCommand 注解来标注某个方法，这样 Hystrix 就会使用 断路器 来“包装”这个方法，每当调用时间超过指定时间时(默认为 1000ms)，断路器将会中断对这个方法的调用。

    Hystrix:
        1 就是一个能进行`熔断` 和`降级`的库，通过使用它能提高整个系统的弹性
        2 在分布式环境中，不可避免地会有许多服务依赖项中的某些失败。Hystrix 是一个库，可通过添加等待时间容限和容错逻辑来帮助您控制这些分布式服务之间的交互。
          Hystrix 通过隔离服务之间的访问点，停止服务之间的级联故障并提供后备选项来实现此目的，所有这些都可以提高系统的整体弹性。

    Sentinel:
        1
        2



5 服务网关
    网关: 网关是系统唯一对外的入口，介于客户端与服务器端之间，用于对请求进行鉴权、限流、 路由、监控等功能。
         API网关为微服务架构中的服务提供了统一的访问入口，客户端通过API网关访问相关服务。
         API网关的定义类似于设计模式中的门面模式，它相当于整个微服务架构中的门面，所有客户端的访问都通过它来进行路由及过滤。
         它实现了请求路由、负载均衡、校验过滤、服务容错、服务聚合等功能

    网关和Nginx:
        https://www.jianshu.com/p/8d82c6c2e5ee
        https://blog.csdn.net/awodwde/article/details/113856091
        https://blog.csdn.net/Aizen_Sousuke/article/details/106640778

        API网关与Nginx的区别:
            api网关与nginx的区别还是比较明显的。
            Nginx是内核和模块组成的。内核设计的比较简单，功能是通过查找客户端以及匹配URL，然后再来启动不同模块下的功能作用。
            其次是nginx的编译模式是静态编译模式，静态编译模式和api网关的模式有所不同。
            并且在处理请求的时候 Nginx每次只能处理一个请求，处理请求的方式是异步非阻塞的方式。

        API网关的优点:
            首先是系统易于监控，可以从网络端口来收集信息从而进行有效分析。
            其次是方便于身份认证，只需在api网关上进行认证，就可以直达不同的微服务系统。
            还有一点是可以减少客户端与各种服务端的交互验证次数，让用户可以一次认证，从而最快进入到不同的微服务架构当中。


    Zuul:
        1
        2

    Spring Cloud GateWay:
        1
        2


6 配置中心
    Spring Cloud config:
        1 为分布式系统中的外部化配置提供服务器和客户端支持。使用Config服务器，可以在中心位置管理所有环境中应用程序的外部属性。
        2 简单说，就是能将各个 应用/系统/模块 的配置文件存放到统一的地方然后进行管理(Git 或者 SVN)。
    
    nacos


7 消息总线
    Spring Cloud Bus:
        1 用于将服务和服务实例与分布式消息系统链接在一起的事件总线。在集群中传播状态更改很有用（例如配置更改事件）。

        2 Spring Cloud Bus的作用就是管理和广播分布式系统中的消息，也就是消息引擎系统中的广播模式。当然作为 消息总线 的Spring Cloud Bus可以做很多事而不仅仅是客户端的配置刷新功能。

        3 




8 分布式消息
    Rabbit MQ
    Rocket MQ
    kafka



9 分布式事务
    seata























状态机模型中的4个要素，即现态、条件、动作、次态。

现态：是指当前所处的状态。
条件：又称为“事件”。当一个条件被满足，将会触发一个动作，或者执行一次状态的迁移。
动作：条件满足后执行的动作。动作执行完毕后，可以迁移到新的状态，也可以仍旧保持原状态。动作不是必需的，当条件满足后，也可以不执行任何动作，直接迁移到新状态。
次态：条件满足后要迁往的新状态。“次态”是相对于“现态”而言的，“次态”一旦被激活，就转变成新的“现态”了。

大白话：
    现态在什么条件下，触发了什么动作，产生了什么次态































